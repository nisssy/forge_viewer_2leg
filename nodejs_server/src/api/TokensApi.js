/**
 * Forge SDK
 * The Forge Platform contains an expanding collection of web service components that can be used with Autodesk cloud-based products or your own technologies. Take advantage of Autodesk’s expertise in design and engineering.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: forge.help@autodesk.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

module.exports = (function () {
	'use strict';

	var ApiClient = require('../ApiClient');

	/**
	* TokensApi service.
	* @module api/TokensApi
	*/

	/**
	 * Constructs a new TokensApiApi.
	 * @alias module:api/TokensApiApi
	 * @class
	 * @param {module:ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:ApiClient#instance} if unspecified.
	 */
	var exports = function (apiClient, region) {
		this.apiClient = apiClient || ApiClient.instance;
		this.region = region || RegionEnum.US; // US is default

		/**
		 * Add a new Webhook secret token.
		 * @param {String} token A secret token that is used to generate a hash signature, which is passed along with notification requests to the callback URL
		 * @param {Object} opts Optional parameters
		 * @param {RegionEnum} opts.xAdsRegion Specifies the region the request will be run in. Currently the regions that are supported are: ‘EMEA’, ‘US’. Default is US.
		 * @param {Object} oauth2client oauth2client for the call
		 * @param {Object} credentials credentials for the call
		 */
		this.CreateToken = function (token, opts, oauth2client, credentials) {
			opts = opts || {};

			// verify the required parameter 'token' is set
			if (token == undefined || token == null)
				return Promise.reject("Missing the required parameter 'token' when calling CreateToken");

			var postBody = {
				token: token,
			};

			var pathParams = {};
			var queryParams = {};
			var headerParams = {
				'x-ads-region': opts.xAdsRegion
			};
			var formParams = {};

			var contentTypes = ['application/json'];
			var accepts = ['application/vnd.api+json', 'application/json'];
			var returnType = Object;

			return this.apiClient.callApi(
				'/webhooks/v1/tokens', 'POST',
				pathParams, queryParams, headerParams, formParams, postBody,
				contentTypes, accepts, returnType, oauth2client, credentials
			);
		};

		/**
		 * Update an existing Webhook secret token
		 * @param {String} token A secret token that is used to generate a hash signature, which is passed along with notification requests to the callback URL
		 * @param {Object} opts Optional parameters
		 * @param {RegionEnum} opts.xAdsRegion Specifies the region the request will be run in. Currently the regions that are supported are: ‘EMEA’, ‘US’. Default is US.
		 * @param {Object} oauth2client oauth2client for the call
		 * @param {Object} credentials credentials for the call
		 */
		this.UpdateToken = function (token, opts, oauth2client, credentials) {
			opts = opts || {};

			// verify the required parameter 'token' is set
			if (token == undefined || token == null)
				return Promise.reject("Missing the required parameter 'token' when calling UpdateToken");

			var postBody = {
				token: token,
			};

			var pathParams = {};
			var queryParams = {};
			var headerParams = {
				'x-ads-region': opts.xAdsRegion
			};
			var formParams = {};

			var contentTypes = ['application/json'];
			var accepts = ['application/vnd.api+json', 'application/json'];
			var returnType = Object;

			return this.apiClient.callApi(
				'/webhooks/v1/tokens/@me', 'PUT',
				pathParams, queryParams, headerParams, formParams, postBody,
				contentTypes, accepts, returnType, oauth2client, credentials
			);
		};

		/**
		 * Delete a Webhook secret token
		 * @param {WebhooksSystemEnum} webhooksSystem A system for example: data, for Data Management
		 * @param {WebhookEventEnum} eventType The webhook event type to delete hook for.
		 * @param {String} hookId The GUID of the hook to delete.
		 * @param {Object} opts Optional parameters
		 * @param {RegionEnum} opts.xAdsRegion Specifies the region the request will be run in. Currently the regions that are supported are: ‘EMEA’, ‘US’. Default is US.
		 * @param {Object} oauth2client oauth2client for the call
		 * @param {Object} credentials credentials for the call
		 */
		this.DeleteHook = function (opts, oauth2client, credentials) {
			var postBody = null;

			var pathParams = {};
			var queryParams = {};
			var headerParams = {
				'x-ads-region': opts.xAdsRegion || this.region
			};
			var formParams = {};

			var contentTypes = ['application/json'];
			var accepts = ['application/vnd.api+json', 'application/json'];
			var returnType = Object;

			return this.apiClient.callApi(
				'/webhooks/v1/tokens/@me', 'DELETE',
				pathParams, queryParams, headerParams, formParams, postBody,
				contentTypes, accepts, returnType, oauth2client, credentials
			);
		};

	};

	/**
	 * Allowed values for the <code>export.DerivativeWebhookEvent</code> property.
	 * @enum {String}
	 * @readonly
	 */
	exports.WebhooksSystemEnum = {
		/**
		 * value: "derivative"
		 * @const
		 */
		"derivative": "derivative",

	};

	/**
	 * Allowed values for the <code>export.WebhookEventEnum</code> property.
	 * @enum {String}
	 * @readonly
	 */
	exports.WebhookEventEnum = {
		// Data Management

		/**
		 * value: "VersionAdded"
		 * @const
		 */
		"VersionAdded": "dm.version.added",
		/**
		 * value: "VersionModified"
		 * @const
		 */
		"VersionModified": "dm.version.modified",
		/**
		 * value: "VersionDeleted"
		 * @const
		 */
		"VersionDeleted": "dm.version.deleted",
		/**
		 * value: "VersionMoved"
		 * @const
		 */
		"VersionMoved": "dm.version.moved",
		/**
		 * value: "VersionCopied"
		 * @const
		 */
		"VersionCopied": "dm.version.copied",
		/**
		 * value: "FolderAdded"
		 * @const
		 */
		"FolderAdded": "dm.folder.added",
		/**
		 * value: "FolderModified"
		 * @const
		 */
		"FolderModified": "dm.folder.modified",
		/**
		 * value: "FolderDeleted"
		 * @const
		 */
		"FolderDeleted": "dm.folder.deleted",
		/**
		 * value: "FolderMoved"
		 * @const
		 */
		"FolderMoved": "dm.folder.moved",
		/**
		 * value: "FolderCopied"
		 * @const
		 */
		"FolderCopied": "dm.folder.copied",

		// Model Derivatives

		/**
		 * value: "ExtractionFinished"
		 * @const
		 */
		"ExtractionFinished": "extraction.finished",
		/**
		 * value: "ExtractionUpdated"
		 * @const
		 */
		"ExtractionUpdated": "extraction.updated",

		// Revit Cloud Worksharing

		/**
		 * value: "ModelSync"
		 * @const
		 */
		"ModelSync": "model.sync",
		/**
		 * value: "ModelPublish"
		 * @const
		 */
		"ModelPublish": "model.publish",

		// Fusion Lifecycle
		/**
		 * value: "ItemClone"
		 * @const
		 */
		"ItemClone": "item.clone",
		/**
		 * value: "ItemCreate"
		 * @const
		 */
		"ItemCreate": "item.create",
		/**
		 * value: "ItemLock"
		 * @const
		 */
		"ItemLock": "item.lock",
		/**
		 * value: "ItemRelease"
		 * @const
		 */
		"ItemRelease": "item.release",
		/**
		 * value: "ItemUnlock"
		 * @const
		 */
		"ItemUnlock": "item.unlock",
		/**
		 * value: "ItemUpdate"
		 * @const
		 */
		"ItemUpdate": "item.update",
		/**
		 * value: "WorkflowTransition"
		 * @const
		 */
		"WorkflowTransition": "workflow.transition",

	};

	/**
	 * Allowed values for the <code>region</code> property.
	 * @enum {String}
	 * @readonly
	 */
	exports.RegionEnum = {
		/**
		 * value: "US"
		 * @const
		 */
		"US": "US",
		/**
		 * value: "EMEA"
		 * @const
		 */
		"EMEA": "EMEA",
		/**
		 * value: "EU"
		 * @const
		 */
		"EU": "EMEA",

	};

	/**
	 * Allowed values for the <code>export.StatusEnum</code> property.
	 * @enum {String}
	 * @readonly
	 */
	exports.StatusEnum = {
		/**
		 * value: "Active"
		 * @const
		 */
		'Active': 'active',
		/**
		 * value: "Inactive"
		 * @const
		 */
		'Inactive': 'inactive',

	};

	return exports;
}());